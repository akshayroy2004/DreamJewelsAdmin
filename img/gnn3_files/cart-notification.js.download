/** Shopify CDN: Minification failed

Line 16:0 Transforming class syntax to the configured target environment ("es5") is not supported yet
Line 16:54 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:536 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:860 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:1108 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:1335 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:1518 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:1522 Transforming default arguments to the configured target environment ("es5") is not supported yet
Line 16:1638 Transforming object literal extensions to the configured target environment ("es5") is not supported yet
Line 16:1642 Transforming const to the configured target environment ("es5") is not supported yet
... and 2 more hidden warnings

**/
class CartNotification extends HTMLElement{constructor(){super(),this.notification=document.getElementById("cart-notification"),this.overlay=document.getElementById("cart-notification-overlay"),this.main=document.getElementById("MainContent"),this.header=document.querySelector("sticky-header"),this.onBodyClick=this.handleBodyClick.bind(this),this.notification.addEventListener("keyup",t=>"Escape"===t.code&&this.close()),this.querySelectorAll('button[type="button"]').forEach(t=>t.addEventListener("click",this.close.bind(this)))}open(){this.notification.classList.add("animate","active"),this.overlay.classList.add("active"),this.main.classList.add("notification-active"),this.notification.addEventListener("transitionend",()=>{this.notification.focus(),trapFocus(this.notification)},{once:!0}),document.body.addEventListener("click",this.onBodyClick)}close(){this.notification.classList.remove("active"),this.overlay.classList.remove("active"),this.main.classList.remove("notification-active"),document.body.removeEventListener("click",this.onBodyClick),removeTrapFocus(this.activeElement)}renderContents(t){this.cartItemKey=t.key,this.getSectionsToRender().forEach(e=>{document.getElementById(e.id).innerHTML=this.getSectionInnerHTML(t.sections[e.id],e.selector)}),this.header&&this.header.reveal(),this.open()}getSectionsToRender(){return[{id:"cart-notification-product",selector:`[id="cart-notification-product-${this.cartItemKey}"]`},{id:"cart-notification-button"},{id:"cart-icon-bubble"}]}getSectionInnerHTML(t,e=".shopify-section"){return(new DOMParser).parseFromString(t,"text/html").querySelector(e).innerHTML}handleBodyClick(t){const e=t.target;if(e!==this.notification&&!e.closest("cart-notification")){const t=e.closest("details-disclosure, header-menu");this.activeElement=t?t.querySelector("summary"):null,this.close()}}setActiveElement(t){this.activeElement=t}}customElements.define("cart-notification",CartNotification);